openapi: 3.0.3
info:
  title: Beckn V2 â€” Discover API (Core)
  version: 0.1.0
  description: |
    Discover API bound to core Beckn Item only. Domain attributes live under
    `Item['beckn:attributes']` as JSON-LD. JSONPath filtering per RFC 9535.
servers:
  - url: https://{region}.api.{networkId}/beckn/v1
    variables:
      region: { default: in, enum: [in, eu, us] }
      networkId: { default: example.net }
tags:
  - name: Discovery
  - name: Browser Search
paths:
  /discover:
    post:
      operationId: discoverItems
      tags: [Discovery]
      security:
        - HttpSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/DiscoverRequest' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/DiscoverResponse' }
        '400':
          description: Bad request
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '500':
          description: Internal server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

  /discover/browser-search:
    get:
      operationId: browserSearch
      tags: [Browser Search]
      security:
        - HttpSig: []
      parameters:
        - in: header
          name: Accept
          schema: { type: string, enum: [text/html, application/json], default: text/html }
        - in: query
          name: text_search
          schema: { type: string }
        - in: query
          name: filters
          schema: { type: string, description: "URL-encoded JSONPath (RFC 9535)" }
        - in: query
          name: page
          schema: { type: integer, minimum: 1, default: 1 }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 20 }
      responses:
        '200':
          description: Results
          content:
            text/html:
              schema: { type: string }
            application/json:
              schema: { $ref: '#/components/schemas/DiscoverResponse' }
        '400':
          description: Bad request
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '422':
          description: Unprocessable entity
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }
        '500':
          description: Internal server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ErrorResponse' }

components:
  securitySchemes:
    HttpSig:
      type: http
      scheme: signature

  schemas:
    DiscoverRequest:
      type: object
      additionalProperties: false
      properties:
        context:
          type: object
          additionalProperties: false
          properties:
            ts: { type: string, format: date-time }
            msgid: { type: string, format: uuid }
            traceid: { type: string, format: uuid }
            network_id:
              type: array
              items: { type: string }
          required: [ts, msgid, traceid]
        schema_context:
          type: array
          items: { type: string, format: uri }
        text_search: { type: string }
        filters: { type: string, description: "JSONPath (RFC 9535)" }
        pagination:
          type: object
          properties:
            page: { type: integer, minimum: 1, default: 1 }
            limit: { type: integer, minimum: 1, maximum: 100, default: 20 }
          additionalProperties: false
      required: [context]

    DiscoverResponse:
      type: object
      properties:
        context:
          type: object
          additionalProperties: true
        catalogs:
          type: array
          items: { $ref: '#/components/schemas/Catalog' }
      required: [context, catalogs]

    Catalog:
      type: object
      properties:
        '@type':
          type: string
          enum: ['beckn:Catalog']
        'beckn:descriptor':
          type: object
          additionalProperties: true
        'beckn:items':
          type: array
          items: { $ref: '#/components/schemas/Item' }
      required: ['beckn:items']

    Item:
      type: object
      additionalProperties: true
      properties:
        '@context':
          oneOf:
            - type: string
            - type: array
              items: { type: string }
        'beckn:id': { type: string }
        'beckn:descriptor': { type: object, additionalProperties: true }
        'beckn:rating': { type: object, additionalProperties: true }
        'beckn:rateable': { type: boolean }
        'beckn:networkId':
          type: array
          items: { type: string }
        'beckn:provider': { type: object, additionalProperties: true }
        'beckn:locations':
          type: array
          items:
            type: object
            additionalProperties: true
        'beckn:attributes':
          type: object
          additionalProperties: true
          properties:
            '@context':
              oneOf:
                - type: string
                - type: array
                  items: { type: string }
            '@type': { type: string }
      required: ['beckn:id']

    ErrorResponse:
      type: object
      additionalProperties: false
      properties:
        error:
          type: object
          required: [code, message]
          properties:
            code: { type: string }
            message: { type: string }
            details: { type: object, additionalProperties: true }
